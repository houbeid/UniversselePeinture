<Window x:Class="WPFModernVerticalMenu.DashboardWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:local="clr-namespace:WPFModernVerticalMenu"
        xmlns:ctls="clr-namespace:WPFModernVerticalMenu.Controls"
        mc:Ignorable="d"
        Name="home"
        Title="MainWindow"
        Height="650"
        Width="1000"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        Background="Transparent"
        AllowsTransparency="True"
        ResizeMode="NoResize"
        FontFamily="Poppins">

    <Window.Resources>
        <Style x:Key="NoBorderButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Border Background="{DynamicResource PrimaryBackgroundColor}"
            CornerRadius="8">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0"
                    Background="{DynamicResource SecundaryBackgroundColor}"
                    CornerRadius="8 0 0 8">
                <Grid x:Name="GridNav" Width="200">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="150"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Border 
                            Margin="5 0 0 0"
                            Width="125"
                            Height="125"
                            Background="White"
                            CornerRadius="62.5">
                            <!-- Half of the width and height to make it a circle -->
                            <Ellipse Width="120" Height="100">
                                <Ellipse.Fill>
                                    <ImageBrush ImageSource="/Resources/UniversselleLogo.png" Stretch="Uniform"/>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Border>
                    </Grid>

                    <!-- Start: MenuItem -->
                    <StackPanel Grid.Row="1" Margin="-17 0 0 0">
                        <Button x:Name="btnHome" Style="{DynamicResource PopupButtonStyle}" Click="btnRegistreCl_Click">
                            <ctls:MenuItem GroupName="MenuItem" IndicatorBrush="{DynamicResource PrimaryBlueColor}" Text="Inscription Client"/>
                        </Button>
                        <Button x:Name="btnDashboard" Style="{DynamicResource PopupButtonStyle}" Click="btnRegistreCo_Click">
                            <ctls:MenuItem GroupName="MenuItem" IndicatorBrush="{DynamicResource PrimaryBlueColor}" Text="Inscription Comercial" VerticalAlignment="Center"/>
                        </Button>
                        <Button x:Name="btnProducts" Style="{DynamicResource PopupButtonStyle}" Click="btnListCom_Click">
                            <ctls:MenuItem GroupName="MenuItem" IndicatorBrush="{DynamicResource PrimaryBlueColor}" Text="Liste des Comercials" VerticalAlignment="Center"/>
                        </Button>
                        <Button x:Name="btnAddStock" Style="{DynamicResource PopupButtonStyle}" Click="btnAddStock_Click">
                            <ctls:MenuItem GroupName="MenuItem" IndicatorBrush="{DynamicResource PrimaryBlueColor}" Text="Ajouter au Stock" VerticalAlignment="Center"/>
                        </Button>
                        <Button x:Name="btnUpdateStock" Style="{DynamicResource PopupButtonStyle}" Click="btnUpdateStock_Click">
                            <ctls:MenuItem GroupName="MenuItem" IndicatorBrush="{DynamicResource PrimaryBlueColor}" Text="Modifier Stock" VerticalAlignment="Center"/>
                        </Button>
                        <Button x:Name="btnProductStock" Style="{DynamicResource PopupButtonStyle}">
                            <ctls:MenuItem GroupName="MenuItem" IndicatorBrush="{DynamicResource PrimaryBlueColor}" Text="Statistiques" VerticalAlignment="Center" Loaded="MenuItem_Loaded"/>
                        </Button>
                    </StackPanel>
                    <!-- End: MenuItem -->

                    <!-- Start: Popup User Control -->
                    <Popup x:Name="Popup" AllowsTransparency="True" HorizontalOffset="0" VerticalOffset="10">
                        <ctls:UserPopup x:Name="Header" Foreground="{DynamicResource PrimaryTextColor}"/>
                    </Popup>
                    <!-- End: Popup User Control -->

                </Grid>
            </Border>

            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="179*"/>
                    <RowDefinition Height="116*"/>
                </Grid.RowDefinitions>

                <!-- Start: Button Close | Restore | Minimize -->
                <StackPanel Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,5,10,0" Height="30" Orientation="Horizontal" FlowDirection="RightToLeft">
                    <Button x:Name="btnClose" Style="{StaticResource IconButtonsStyle}" Content="{DynamicResource close}" Click="btnClose_Click" Tag="IsCloseButton"/>
                    <Button x:Name="btnRestore" Margin="5,0" Click="btnRestore_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource IconButtonsStyle}">
                                <Setter Property="Content" Value="{DynamicResource maximize}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=home, Path=WindowState}" Value="Maximized">
                                        <Setter Property="Content" Value="{DynamicResource restore}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="btnMinimize" Style="{DynamicResource IconButtonsStyle}" Content="{DynamicResource minimize}" Click="btnMinimize_Click"/>
                </StackPanel>
                <!-- End: Button Close | Restore | Minimize -->

                <!-- Start: Notification and Logout Buttons -->
                <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,30,328">
                    <Button x:Name="btnNotification" Style="{StaticResource NoBorderButtonStyle}" Width="55" Height="30" Background="Transparent" Click="btnNotification_Click">
                        <fa:ImageAwesome Icon="Bell" Width="20" Height="20" Foreground="Black"/>
                    </Button>
                    <Button x:Name="btnLogout" Click="btnLogout_Click" Background="#124481" Foreground="White" Padding="5,0" Margin="10,0,0,0" Width="130" Height="35">
                        <StackPanel Orientation="Horizontal">
                            <fa:ImageAwesome Icon="SignOut" Width="20" Height="20" Margin="0,0,5,0" Foreground="White"/>
                            <TextBlock Text="Déconnexion" VerticalAlignment="Center" Foreground="White"/>
                        </StackPanel>
                    </Button>
                </StackPanel>

                <!-- Popup for Notifications -->
                <Popup x:Name="notificationPopup" Placement="Mouse" StaysOpen="False" AllowsTransparency="True" PopupAnimation="Slide">
                    <Border Background="White" BorderBrush="Black" BorderThickness="1" CornerRadius="5" Width="182">
                        <StackPanel>
                            <TextBlock Text="Notifications" FontWeight="Bold" Margin="10"/>
                            <ListBox x:Name="notificationList" Width="200" Height="200">
                                <!-- Example notifications -->
                                <ListBoxItem>Notification 1</ListBoxItem>
                                <ListBoxItem>Notification 2</ListBoxItem>
                                <ListBoxItem>Notification 3</ListBoxItem>
                            </ListBox>
                        </StackPanel>
                    </Border>
                </Popup>
                <!-- End: Notification and Logout Buttons -->

                <!-- Start: Frame Content -->
                <Frame Grid.Row="1"
                       Name="fContainer"
                       Navigated="fContainer_Navigated"
                       NavigationUIVisibility="Hidden" Margin="0,30,0,0" Grid.RowSpan="2">
                </Frame>
                <!-- End: Frame Content -->
            </Grid>
        </Grid>
    </Border>
</Window>



